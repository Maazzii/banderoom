<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0/EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.mapper.boardMapper">
	
	<select id="list" parameterType="map" resultType="ArticlesVO">
		select * from 
		(select row_number() over(order by aIdx desc) as rownum, s.* from articles s
		where bIdx=#{bIdx} 
		and status != 1
		<if test='searchValue != null and !"".equals(searchValue)'>
			and ${searchType} like CONCAT('%',#{searchValue},'%')
		</if>
		order by aIdx desc) a
		<![CDATA[where rownum >= #{start} and rownum <= #{end}]]>
	</select>
	
	<update id="listDelete" parameterType="articlesVO">
		update articles	set status = 1 where aidx=#{aIdx} and bidx=#{bIdx}
	</update>
	
	<select id="pageCount" parameterType="map" resultType="ArticlesVO">
		select * from articles
		where bidx = #{bIdx}
		and status != 1
		<if test='searchValue != null and !"".equals(searchValue)'>
			and ${searchType} like CONCAT('%',#{searchValue},'%')
		</if>
	</select>
	
	<insert id="insertArticles" parameterType="articlesVO">
		insert into articles(
			bidx
			,title
			,content
			,midx
			,mnickname
		) values(
			#{bIdx}
			,#{title}
			,#{content}
			,#{mIdx}
			,#{mNickname}
		)	
	</insert>
	
	<select id="infoOne" parameterType="int" resultType="serviceInfoVO">
		select idx
			,title
			,content
			from service_info
			where idx=#{idx}
		</select>
	
	<update id="infoModify" parameterType="serviceInfoVO">
		update service_info set content = #{content} where idx=#{idx}
	</update> 
	
	<select id="selectArticles" parameterType="ArticlesVO" resultType="ArticlesVO">
		select * from articles
		where aidx=#{aIdx} and bidx=#{bIdx}
	</select>
	
	<update id="readCount" parameterType="ArticlesVO">
		update articles set readcount= readcount+1 where aidx=#{aIdx} and bidx=#{bIdx}
	</update>
	
	<update id="serlistModify" parameterType="articlesVO">
		update articles	set title=#{title},content=#{content}
		where aidx=#{aIdx}
		and bidx=#{bIdx}
	</update>
	
	<delete id="serlistDelete" parameterType="articlesVO">
		delete from articles where aidx=#{aIdx} and bidx=#{bIdx}
	</delete>
	
	<update id="boardUpdate" parameterType="ArticlesVO">
		update articles	set title=#{title},content=#{content}
		where aidx=#{aIdx}
		and bidx=#{bIdx}
	</update>
	
	<insert id="likedAtricles" parameterType="LikedArticlesVO">
		insert into liked_articles(
			aIdx,
			bIdx,
			mIdx
		)values(
			#{aIdx},
			#{bIdx},
			#{mIdx}
		)
	</insert>
	
	<delete id="unLikedArticles" parameterType="LikedArticlesVO">
		delete from liked_articles where aidx=#{aIdx} and midx=#{mIdx}
	</delete>
	
	<select id="likedStatus" parameterType="LikedArticlesVO" resultType="int">
		select count(*) from liked_articles
		where aidx = #{aIdx} and midx = #{mIdx}
	</select>
	
	<select id="likeCount" parameterType="LikedArticlesVO" resultType="int">
		select count(*) from liked_articles
		where aidx = #{aIdx}
	</select>
	
	<select id="jlistArticle" parameterType="map" resultType="articlesVO">
			select * from
			(SELECT
		<![CDATA[
			  @rownum:=@rownum+1 as rownum, 
			  art.*
			FROM articles art,(select @rownum:=0) rn_art
		]]>
			where bIdx=#{bIdx}
			and status!=1
			<if test='searchValue != null and !"".equals(searchValue)'>
			and ${searchType} like CONCAT('%',#{searchValue},'%')
			</if>
			<if test="status != 0 and status != null">
			and status=#{status}
			</if>
			order by aidx desc) list
		<![CDATA[
			where rownum>=#{start} and rownum <=#{end}
			]]>
	</select>
	
	<select id="jlistArticleCount" parameterType="Map" resultType="int">
		select count(aIdx)
		from articles
		where bidx=#{bIdx}
		and status!=1
		<if test='searchValue != null and !"".equals(searchValue)'>
		and ${searchType} like CONCAT('%',#{searchValue},'%')
		</if>
		<if test="status != 0 and status != null">
		and status=#{status}
		</if>
	</select>
	
	<select id="jlistOneArticle" parameterType="map" resultType="map">
		select * from(
		select 
			a.aIdx
			,a.bIdx
			,a.title
			,a.content
			,a.mIdx
			,a.mNickname
			,a.regDate
			,a.readCount
			,a.status
			,count(la.aidx) likeCount 
		from
			articles a
		left join 
			liked_articles la 
		on 
			a.bidx = la.bidx 
		and 
			a.aidx =la.aidx
		group by 
			a.aIdx
			,a.bIdx
			,a.title
			,a.content
			,a.midx
			,a.mnickname
			,a.regdate
			,a.readcount
			,a.status
			) one
		where
			bidx = #{bIdx}
		and
			aidx = #{aIdx}
	</select>
	
	<insert id="commentWrite" parameterType="commentsVO">
		insert into comments(
			bidx
			,aidx
			,midx
			,mnickname
			,content
			,picsrc
			,regdate
			) values(
			#{bIdx}
			,#{aIdx}
			,#{mIdx}
			,#{mNickname}
			,#{content}
			,#{picSrc}
			,now()
			)		
	</insert>
	
 	<!-- <select id="commentList" parameterType="map" resultType="commentsVO">
		<![CDATA[
		select * from
			(SELECT
			  @rownum:=@rownum+1 as rownum, 
			  cmt.*
			FROM 
				comments cmt,(select @rownum:=0) rn_cmt
		]]>
			where 
				bIdx=#{bIdx}
			and 
				aIdx=#{aIdx}
			order by 
				cidx ) list
		<![CDATA[
			where 
				rownum>=${start} and rownum <=#{end}
		]]>
	</select> 
	 -->
	<select id="commentCount" parameterType="map" resultType="int">
		select (c_count + cr_count) count from 
			(select count(cc.cidx) as c_count 
				from comments cc where aidx = #{aIdx}) a, 
			(select count(cr.cidx) as cr_count from comments c right join comment_replies cr on c.cidx = cr.cidx where c.aidx = #{aIdx}) b;
	</select>
	
	<select id="onlyCommentTotal" parameterType="map" resultType="int">
		select count(cIdx) from comments
		where 
			aIdx=#{aIdx}
		and
			bIdx=#{bIdx};
	</select>

	<select id="commentList" parameterType="map" resultType="commentsVO">
		select 	list.rownum
				,list.cidx
				,list.bidx
				,list.aidx
				,list.midx
				,list.mnickname
				,list.content
				,list.picsrc
				,list.regdate
				,list.status
				,list.mprofilesrc
		from 
			(select
			<![CDATA[ 
				@rownum:=@rownum+1 as rownum
				,cmt.cidx as cidx
				,cmt.midx as midx
				,cmt.bidx as bidx
				,cmt.aidx as aidx
				,cmt.mnickname as mnickname
				,cmt.content as content
				,cmt.picsrc as picsrc
				,cmt.regdate as regdate
				,cmt.status as status
				,gm.profilesrc as mProfileSrc
			from 
				comments cmt
			inner join 
				general_members gm,(select @rownum:=0) rn
			where
				cmt.midx = gm.midx
			and
				cmt.aidx=#{aIdx}
			and
				cmt.bidx=#{bIdx}
			order by 
				cidx) list
			where 
				rownum>=#{start} and rownum <=#{end}
				]]>
	</select>
	
	<select id="bestArticles" resultType="ArticlesVO">
		select a.*, count(*) as likeCount from articles a inner join liked_articles la
		on a.aidx = la.aidx group by a.aidx order by likeCount desc limit 3;
	</select>
		
	<update id="commentUpdate" parameterType="commentsVO">
		update comments set
			<if test='content != null and !"".equals(content)'>
			content=#{content}
			</if>
			<if test='picSrc != null and !"".equals(picSrc)'>
			,picsrc=#{picSrc}
			</if>
			<if test='status != null and !"".equals(status)'>
			,status=#{status}
			</if>
			where
				aIdx=#{aIdx}
			and 
				bIdx=#{bIdx}
			and 
				cIdx=#{cIdx}
	</update> 
	
	<update id="commentDelete" parameterType="commentsVO">
		update comments set status=1 where cIdx=#{cIdx}
	</update>
	
	<insert id="replyWrite" parameterType="commentRepliesVO">
		insert into comment_replies(
			cIdx
			,mIdx
			,mnickname
			,content
			,picsrc
			,regdate
			)values(
			#{cIdx}
			,#{mIdx}
			,#{mNickname}
			,#{content}
			,#{picSrc}
			,now()
			)
	</insert>
	
	<delete id="replyDelete" parameterType="commentRepliesVO">
		delete from comment_replies
		where ridx=#{rIdx}
	</delete>
	
	<select id="replyList" parameterType="commentRepliesVO" resultType="commentRepliesVO">
		select 
			rIdx
			,cIdx
			,mIdx
			,mnickname
			,content
			,picsrc
			,regdate
		from
			comment_replies
		where
			cIdx=#{cIdx}
		order by
			regDate
	</select>
	
	<select id="prevList" parameterType="ArticlesVO" resultType="ArticlesVO">
		select * from articles where aidx &lt; ${aIdx} and bidx = ${bIdx} and status != 1 order by aidx desc limit 2;
	</select>
	
	<select id="nextList" parameterType="ArticlesVO" resultType="ArticlesVO">
	select * from articles where aidx &gt; ${aIdx} and bidx = ${bIdx} and status != 1 order by aidx limit 2;
	</select>
	
</mapper>